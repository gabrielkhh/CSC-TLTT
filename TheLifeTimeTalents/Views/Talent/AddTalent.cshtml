<script src="https://sdk.amazonaws.com/js/aws-sdk-2.0.0-rc1.min.js"></script>
@{
    ViewData["Title"] = "Talent Upload";
}
<div class="container body-content">
    <h2>@ViewData["Title"].</h2>


    <h4>Upload a new talent.</h4>
    <hr />

    <form id="myForm" data-toggle="validator">
        <div class="form-group">
            <label class="col-md-2 control-label">Talent Name</label>
            <div class="col-md-10">
                <input type="text" id="txtTalentName" name="txtTalentName" class="form-control" />
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Short Name</label>
            <div class="col-md-10">
                <input type="text" id="txtShortName" name="txtShortName" class="form-control" />
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Reknown</label>
            <div class="col-md-10">
                <input type="text" id="txtReknown" name="txtReknown" class="form-control" />
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Bio</label>
            <div class="col-md-10">
                <textarea type="text" id="txtBio" name="txtBio" class="form-control"></textarea>
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Make Private</label>
            <div class="col-md-10">
                <input type="checkbox" id="privacy" name="privacy" value="privacy">
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Image</label>
            <div class="col-md-10">
                <input type="file" name="file" id="file" value="dataFile" input-group-lg" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 padding-top padding-bottom">
                <button id="uploadFile" type="submit" class="btn btn-default">Upload</button>
            </div>
        </div>
    </form>
</div>
<script>

    $("[name='privacy']").bootstrapSwitch();
    var isPrivate = false;

    window.$PhotoInputElement = $('#file');

    window.$PhotoInputElement.fileinput({
        uploadUrl: '/API/Image/UploadImage',
        uploadAsync: false,
        maxFileCount: 1,
        type: 'post',
        overwriteInitial: false,
        showUpload: false,
        showRemove: false,
        browseClass: 'btn btn-primary btn-md pull-right',
        previewFileIcon: '<i class="glyphicon glyphicon-king"></i>',
        allowedFileExtensions: ['jpg', 'jpeg', 'png'],
        uploadExtraData: function () {
            var out = {};
            return out;
        }
    });
    window.$PhotoInputElement.on('filebatchuploadcomplete', function (event, data, previewId, index) {
        var form = data.form, files = data.files, extra = data.extra,
            response = data.response, reader = data.reader;
        console.log(response);
        console.log(event);
        console.dir(data);
        $('body').fadeOut(2000, '/Home/Index');
    });

    $(document).ready(function () {

        $("#myForm").validate({
            rules: {
                txtTalentName: {
                    required: true,
                },
                txtShortName: {
                    required: true,
                },
                txtReknown: {
                    required: true,
                },
                txtBio: {
                    required: true,
                },
            },
            messages: {
                txtTalentName: {
                    required: "Please enter your talent name",
                },
                txtShortName: {
                    required: "Please enter your short name",
                },
                txtReknown: {
                    required: "Please enter your reknown",
                },
                txtBio: {
                    required: "Please enter your bio",
                },
            },
            onkeyup: false, //turn off auto validate whilst typing
            submitHandler: function (form) {

                function WebFormData(inTalentName, inShortName, inReknown, inBio, inIsPrivate, inImageUrl) {
                    this.TalentName = inTalentName;
                    this.ShortName = inShortName;
                    this.Reknown = inReknown;
                    this.Bio = inBio;
                    this.IsPrivate = inIsPrivate;
                    this.ImageUrl = inImageUrl;
                }

                //NO FRONT END VALIDATION YET
                collectedTxtTalentName = $('#txtTalentName').val();
                collectedTxtShortName = $('#txtShortName').val();
                collectedTxtReknown = $('#txtReknown').val();
                collectedTxtBio = $('#txtBio').val();
                imageUrl = "www.fakeimage.com"

                if ($("#privacy").is(':checked')) {
                    isPrivate = true;
                }
                else {
                    isPrivate = false;
                }

                var webFormData = new WebFormData(collectedTxtTalentName,
                    collectedTxtShortName, collectedTxtReknown, collectedTxtBio, isPrivate, imageUrl);

                var webFormDataInString = JSON.stringify(webFormData);

                console.log(webFormDataInString);

                var idToken = sessionStorage.getItem('idToken');

                $talentHandler = jQuery.ajax({
                    type: 'POST',
                    url: 'http://server.anythingabout.me/API/Talents/CreateTalent',
                    crossDomain: true,
                    data: webFormDataInString,
                    dataType: 'json',
                    contentType: 'application/json',
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader('Authorization', 'bearer ' + idToken)
                    }
                });

                $talentHandler.done(function (data, textStatus, jqXHR) {
                    console.log("Success");
                    window.location.replace("/Home/Index");
                });

                $talentHandler.fail(function (data, textStatus, jqXHR) {
                    toastr.options = {
                        "closeButton": false,
                        "debug": false,
                        "newestOnTop": false,
                        "progressBar": false,
                        "positionClass": "toast-bottom-left",
                        "preventDuplicates": false,
                        "onclick": null,
                        "showDuration": "300",
                        "hideDuration": "1000",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    }

                    toastr["error"](jqXHR, "Error")
                });
            }
        });

    });

</script>

@*<script>
        AWS.config.update({
            accessKeyId: 'AKIAIVXFDITHKGUQUDIQ',
            secretAccessKey: 'xUA5X/BVqEwTQtzAsXctCrf1WqGP4EJjHKKq7vo'
        });
        AWS.config.region = 'us-east-1';

        function uploadFile() {

            var s3 = new AWS.S3({
                params: { Bucket: 'csc1718s1' }
            });
            var file = document.getElementById('file').files[0];
            if (file) {
                s3.putObject({
                    Key: file.name,
                    ContentType: file.type,
                    Body: file,
                    ACL: "public-read"
                },
                    function (err, data) {
                        if (data !== null) {
                            alert("Got it!");
                        }
                        else {
                            alert("Upload failed!");
                        }
                    });
            }
        }

    </script>*@


@*<script type="text/javascript">
        var s3BucketName = 'csc1718s1';

        function listObjs() {
            var s3 = new AWS.S3({
                params: { Bucket: s3BucketName }
            });
            s3.listObjects(function (error, data) {
                if (error === null) {
                    var html_keys = 'Object Keys:<br />';
                    var html_imgs = '';
                    jQuery.each(data.Contents, function (index, obj) {
                        html_keys += (index + ': ' + obj.Key + '<br />');
                        html_imgs += "<img src='" + "https://s3.amazonaws.com/"
                            + s3BucketName + "/" + obj.Key + "'/><br/>";
                    });
                    jQuery("#objKeys").html(html_keys);
                    jQuery("#objImgs").html(html_imgs);
                } else { console.log(error); }
            });
        }
    </script>*@
