<script src="https://sdk.amazonaws.com/js/aws-sdk-2.0.0-rc1.min.js"></script>
@{
    ViewData["Title"] = "Add Talent";
}
<div class="container body-content">
    <h2>@ViewData["Title"].</h2>


    <h4>Upload a new talent.</h4>
    <hr />

    <form id="myForm" data-toggle="validator">
        <div class="form-group">
            <label class="col-md-2 control-label">Talent Name</label>
            <div class="col-md-10">
                <input type="text" id="txtTalentName" name="txtTalentName" class="form-control" />
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Short Name</label>
            <div class="col-md-10">
                <input type="text" id="txtShortName" name="txtShortName" class="form-control" />
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Reknown</label>
            <div class="col-md-10">
                <input type="text" id="txtReknown" name="txtReknown" class="form-control" />
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Bio</label>
            <div class="col-md-10">
                <textarea type="text" id="txtBio" name="txtBio" class="form-control"></textarea>
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label" title="Making it private will hide your talent from the public">Make Private</label>
            <div class="col-md-10">
                <input type="checkbox" id="privacy" name="privacy" value="privacy">
            </div>
        </div>

        <br /><br /><br />

        <div class="form-group">
            <label class="col-md-2 control-label">Image</label>
            <div class="col-md-10">
                <input type="file" name="file" id="file" value="dataFile" input-group-lg" required />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 padding-top padding-bottom">
                <button id="uploadFile" type="submit" class="btn btn-default">Upload</button>
            </div>
        </div>
    </form>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/aws-sdk/2.94.0/aws-sdk.js"></script>
<script>

    var base64String = '';
    var webFormData;

    var idToken = sessionStorage.getItem('idToken');

    var configg = {
        region: "us-west-2",
        endpoint: 'apigateway.us-west-2.amazonaws.com',
        accessKeyId: "AKIAI6R6STURXVOILDOA",
        secretAccessKey: "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"
    };

    AWS.config.update({
        region: "us-west-2",
        endpoint: 'apigateway.us-west-2.amazonaws.com',
        accessKeyId: "AKIAI6R6STURXVOILDOA",
        secretAccessKey: "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"
    });

    var docClient = new AWS.DynamoDB.DocumentClient();

    var params = {
        TableName: "CSCSessions",
        Key:{
            "SessionId": idToken
        }
    };

    docClient.get(params, function (err, data) {
        if (err) {
            console.log("Error occurred while retrieving Dynamo data.");
        } else {
            console.log(data);
        }
    });

    //var table = new AWS.DynamoDB({ params: { TableName: 'CSCSessions', accessKeyId: 'AKIAI6R6STURXVOILDOA', secretAccessKey: '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', region: 'us-west-2', apiVersion: '2012-08-10' } });

    ////var key = 'UNIQUE_KEY_ID';

    ////var request = new AWS.DynamoDB({  }).getItem(params);

    //table.getItem({ Key: { SessionId: { S: idToken } } }, function (err, data) {
    //    console.log(data.Item); // print the item data
    //});

    //request.on('success', function (response) {

    //    console.log(response.data.Item.SessionId.S);
    //});

    //request.send();

    //table.getItem({ "Key": { "SessionId": { "S": idToken } }, "TableName": "CSCSessions" }, function (err, data) {

    //    console.log(data);

    //    console.log(err);

    //});

     //Initialize parameters needed to call DynamoDB
    //var params = {
    //    TableName: 'CSCSessions',
    //    Key: { 'SessionId': { S: 'SessionId' } },
    //};


    //var params = {
    //    AttributesToGet: [
    //        "SessionId"
    //    ],
    //    TableName: 'CSCSessions',
    //    Key: {
    //        "ID": {
    //            "S": idToken
    //        },
    //    }
    //}





    //function queryData() {

    //    var params = {
    //        TableName: "CSCSessions",
    //    };

    //    docClient.query(params, function (err, data) {
    //        if (err) {
    //            console.log(JSON.stringify(err, undefined, 2))
    //        } else {
    //            console.log(JSON.stringify(data, undefined, 2))
    //        }
    //    });
    //}

    $("[name='privacy']").bootstrapSwitch();

    var isPrivate = false;

    window.$PhotoInputElement = $('#file');

    window.$PhotoInputElement.fileinput({
        maxFileCount: 1,
        overwriteInitial: false,
        showUpload: false,
        showRemove: false,
        browseClass: 'btn btn-primary btn-md pull-right',
        previewFileIcon: '<i class="glyphicon glyphicon-king"></i>',
        allowedFileExtensions: ['jpg', 'jpeg', 'png'],
    });

    $(document).ready(function () {

        $("#myForm").validate({
            rules: {
                txtTalentName: {
                    required: true,
                },
                txtShortName: {
                    required: true,
                },
                txtReknown: {
                    required: true,
                },
                txtBio: {
                    required: true,
                },
                file: {
                    required: true,
                },
            },
            messages: {
                txtTalentName: {
                    required: "Please enter your talent name",
                },
                txtShortName: {
                    required: "Please enter your short name",
                },
                txtReknown: {
                    required: "Please enter your reknown",
                },
                txtBio: {
                    required: "Please enter your bio",
                },
                file: {
                    required: "Please select a file",
                },
            },
            onkeyup: false, //turn off auto validate whilst typing

            submitHandler: function (form) {

                $("#uploadFile").disabled = true;

                function WebFormData(inTalentName, inShortName, inReknown, inBio, inIsPrivate, inFileName, inFileString) {
                    this.TalentName = inTalentName;
                    this.ShortName = inShortName;
                    this.Reknown = inReknown;
                    this.Bio = inBio;
                    this.IsPrivate = inIsPrivate;
                    this.FileName = inFileName;
                    this.InputString = inFileString;
                }

                //NO FRONT END VALIDATION YET
                collectedTxtTalentName = $('#txtTalentName').val();
                collectedTxtShortName = $('#txtShortName').val();
                collectedTxtReknown = $('#txtReknown').val();
                collectedTxtBio = $('#txtBio').val();
                var file = $('#file').get(0).files.item(0);
                var collectedfileName = file.name;

                if ($("#privacy").is(':checked')) {
                    isPrivate = true;
                }
                else {
                    isPrivate = false;
                }

                var reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function () {
                    collectedFileString = reader.result;

                    webFormData = new WebFormData(collectedTxtTalentName,
                        collectedTxtShortName, collectedTxtReknown, collectedTxtBio, isPrivate, collectedfileName, collectedFileString);
                    var webFormDataInString = JSON.stringify(webFormData);

                    console.log(webFormDataInString);

                    $talentHandler = jQuery.ajax({
                        type: 'PUT',
                        url: 'http://server.anythingabout.me/API/Talents/UpdateTalent',
                        crossDomain: true,
                        data: webFormDataInString,
                        dataType: 'json',
                        contentType: 'application/json',
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader('Authorization', 'bearer ' + idToken)
                        }
                    });

                    $talentHandler.done(function (data, textStatus, jqXHR) {

                        swal({
                            title: "Successful!",
                            text: "Talent Added!",
                            type: "success"
                        },
                            function () {
                                ignore = true;
                                window.location.replace("/Home/Index");
                            });

                    });

                    $talentHandler.fail(function (data, textStatus, jqXHR) {
                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": false,
                            "positionClass": "toast-bottom-left",
                            "preventDuplicates": false,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "5000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }

                        toastr["error"](jqXHR, "Error")
                    });

                };
                reader.onerror = function (error) {
                    console.log('Error: ', error);
                };
            }
        });

    });

</script>
